name: Bitrise-PR-comment

on: issue_comment
jobs:
  pr_commented:
    # This job only runs for pull request comments
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
#       - name: Curl Github API Request
#         id: curl_data
#         run: |
#           pr_json=$(curl -s -H "Accept: application/vnd.github.v3+json" \
#             ${{ github.event.issue.pull_request.url }} | jq '.head')
#           echo "::set-output name=json::${{ fromJson(pr_json) }}"
      - uses: actions/github-script@v5
        id: pr_head
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: return "I will be string (not JSON) encoded!"
#           const result = await github.request("${{ github.event.issue.pull_request.url }}")
#           return result.data.head

      - name: Get PR informations
        id: pr_data
        run: |
          echo ">>>>> test"
          echo ">>>>> ${{ steps.pr_head.outputs.result }}"
          # echo ">>>> ${{ fromJson(steps.pr_head.outputs.result) }}"

          # echo "::set-output name=branch::${{ fromJson(steps.curl_data.outputs.pr).ref }}"
          # echo "::set-output name=sha::${{ fromJson(steps.curl_data.outputs.pr).sha }}"

#       - name: PR comment
#         run: |
#           COMMENT="${{ github.event.comment.body }}"
          
#           WORKFLOW=""
#           if [ "$COMMENT" = "run tests" ]; then
#             WORKFLOW="pr-jobs" 
#           elif [ "$COMMENT" = "make app" ]; then
#             WORKFLOW="build-app"
#           elif [ "$COMMENT" = "unit test" ]; then
#             WORKFLOW="unit-test"
#           fi
          
#           # for tests
#           BRANCH="${{ steps.pr_data.outputs.branch }}"
#           HASH="${{ steps.pr_data.outputs.sha }}"
#           echo "${BRANCH} ${HASH}"
            
#           # skip curl if workflow didn't match
#           if [ "$WORKFLOW" != "" ]; then
#             BRANCH="${{ steps.pr_data.outputs.branch }}"
#             HASH="${{ steps.pr_data.outputs.sha }}"
#             APP_SLUG=${{ secrets.BITRISE_APP_SLUG }}
#             BUILD_TRIGGER_TOKEN=${{ secrets.BITRISE_BUILD_TRIGGER_TOKEN }}
#             echo "${BRANCH} ${HASH}"
#             # curl https://app.bitrise.io/app/$APP_SLUG/build/start.json --data '{"hook_info":{"type":"bitrise","build_trigger_token":"'${BUILD_TRIGGER_TOKEN}'"}, "build_params":{"branch":"'${BRANCH}'","workflow_id":"'${WORKFLOW}'","commit_hash":"'${HASH}'"},"triggered_by":"curl"}'
#           else
#             echo "Workflow not found"
#           fi
